{"version":3,"file":"static/js/16.a3c8fb3c.chunk.js","mappings":"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","sources":["common/Axios.ts","common/Constant.ts","core/table.tsx","containers/PerformanceReport/service.ts","containers/PerformanceReport/index.tsx","core/page.ts","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT\n\nimport { Octokit } from \"@octokit/rest\";\nimport axios from \"axios\";\n\nexport const AxionConfig = axios.create({\n  baseURL: process.env.REACT_APP_DYNAMODB_URL,\n  timeout: 3000,\n  headers: {\n    \"x-api-key\": process.env.REACT_APP_DYNAMODB_TOKEN,\n  },\n  responseType: \"json\",\n  maxRedirects: 21,\n});\n\nexport const OctokitConfig = new Octokit({\n  auth: process.env.REACT_APP_GITHUB_SECRET_TOKEN,\n});\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT\n\nexport const USE_CASE: string[] = [\"statsd\", \"logs\", \"disk\"];\nexport const REPORTED_METRICS: string[] = [\n  \"procstat_cpu_usage\",\n  \"procstat_memory_rss\",\n];\nexport const TRANSACTION_PER_MINUTE: number[] = [100, 1000, 5000];\nexport const OWNER_REPOSITORY: string = \"aws\";\nexport const SERVICE_NAME: string = \"AmazonCloudWatchAgent\";\nexport const CONVERT_REPORTED_METRICS_NAME: { [metric_name: string]: string } =\n  {\n    procstat_cpu_usage: \"CPU Usage\",\n    procstat_memory_rss: \"Memory Resource\",\n    procstat_memory_swap: \"Memory Swap\",\n    procstat_memory_vms: \"Virtual Memory\",\n    procstat_memory_data: \"Swap Memory\",\n    procstat_num_fds: \"File Descriptors\",\n    procstat_write_bytes: \"Write Disk Bytes\",\n    net_bytes_sent: \"Net Bytes Sent\",\n    net_packets_sent: \"Net Packages Sent\",\n  };\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT\n\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { UseCaseData } from \"../containers/PerformanceReport/data.js\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n    border: \"1px solid #000\",\n    textAlign: \"center\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    border: \"1px solid #000\",\n    textAlign: \"center\",\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {},\n}));\n\nexport function PerformanceTable(props: {\n  use_cases: UseCaseData[];\n  data_rate: string;\n}): JSX.Element {\n  const { use_cases, data_rate } = props;\n  return (\n    <TableContainer sx={{ mb: 4 }} component={Paper}>\n      <Table\n        sx={{ borderStyle: \"solid\" }}\n        size=\"small\"\n        aria-label=\"a dense table\"\n      >\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              width=\"50vw\"\n              align=\"center\"\n              sx={{ fontWeight: \"bold\", whiteSpace: \"nowrap\" }}\n            >\n              Use Case\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              align=\"center\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Instance Type\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"50%\"\n              align=\"center\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Avg CPU Usage (%)\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              align=\"center\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Avg Memory Usage (%)\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              align=\"center\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Avg Memory Swap (%)\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              align=\"center\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Avg Memory Data (%)\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              align=\"center\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Avg Virtual Memory (%)\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              align=\"center\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Avg Write Disk Bytes (MB)\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              align=\"center\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              File Descriptors\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Avg Net Bytes Sent (MB)\n            </StyledTableCell>\n            <StyledTableCell\n              width=\"30%\"\n              sx={{\n                border: \"1px solid #000\",\n                fontWeight: \"bold\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              Avg Net Packages Sent (MB)\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {use_cases?.map((use_case) => (\n            <StyledTableRow key={use_case.name}>\n              <StyledTableCell>{use_case.name}</StyledTableCell>\n              <StyledTableCell>{use_case.instance_type}</StyledTableCell>\n              <StyledTableCell>\n                {Number(use_case.data?.[data_rate]?.procstat_cpu_usage).toFixed(\n                  2\n                )}\n              </StyledTableCell>\n              <StyledTableCell>\n                {(\n                  Number(use_case.data?.[data_rate]?.procstat_memory_rss) /\n                  Number(use_case.data?.[data_rate]?.mem_total)\n                ).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {(\n                  Number(use_case.data?.[data_rate]?.procstat_memory_swap) /\n                  Number(use_case.data?.[data_rate]?.mem_total)\n                ).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {(\n                  Number(use_case.data?.[data_rate]?.procstat_memory_data) /\n                  Number(use_case.data?.[data_rate]?.mem_total)\n                ).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {(\n                  Number(use_case.data?.[data_rate]?.procstat_memory_vms) /\n                  Number(use_case.data?.[data_rate]?.mem_total)\n                ).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {Number(\n                  use_case.data?.[data_rate]?.procstat_write_bytes\n                ).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {Number(use_case.data?.[data_rate]?.procstat_num_fds).toFixed(\n                  2\n                )}\n              </StyledTableCell>\n              <StyledTableCell>\n                {Number(use_case.data?.[data_rate]?.net_bytes_sent).toFixed(2)}\n              </StyledTableCell>\n              <StyledTableCell>\n                {Number(use_case.data?.[data_rate]?.net_packets_sent).toFixed(\n                  2\n                )}\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT\nimport moment from \"moment\";\nimport { AxionConfig, OctokitConfig } from \"../../common/Axios\";\nimport {\n  OWNER_REPOSITORY,\n  SERVICE_NAME,\n  USE_CASE,\n} from \"../../common/Constant\";\nimport {\n  PerformanceMetricReport,\n  PerformanceMetricReportParams,\n  ServiceLatestVersion,\n  ServicePRInformation,\n} from \"./data.js\";\nexport async function GetLatestPerformanceReports(): Promise<\n  PerformanceMetricReport[]\n> {\n  return GetPerformanceReports({\n    TableName: process.env.REACT_APP_DYNAMODB_NAME,\n    Limit: USE_CASE.length,\n    IndexName: \"ServiceDate\",\n    KeyConditions: {\n      Service: {\n        ComparisonOperator: \"EQ\",\n        AttributeValueList: [\n          {\n            S: SERVICE_NAME,\n          },\n        ],\n      },\n      CommitDate: {\n        ComparisonOperator: \"LE\",\n        AttributeValueList: [\n          {\n            N: moment().unix().toString(),\n          },\n        ],\n      },\n    },\n    ScanIndexForward: false,\n  });\n}\n\nasync function GetPerformanceReports(\n  params: PerformanceMetricReportParams\n): Promise<PerformanceMetricReport[]> {\n  return AxionConfig.post(\"/\", { Action: \"Query\", Params: params })\n    .then(function (body: { data: { Items: PerformanceMetricReport[] } }) {\n      return body?.data?.Items;\n    })\n    .catch(function (error: unknown) {\n      return Promise.reject(error);\n    });\n}\n\nexport async function GetServiceLatestVersion(): Promise<ServiceLatestVersion> {\n  return OctokitConfig.request(\"GET /repos/{owner}/{repo}/releases/latest\", {\n    owner: OWNER_REPOSITORY,\n    repo: process.env.REACT_APP_GITHUB_REPOSITORY,\n  })\n    .then(function (body: any) {\n      return body?.data;\n    })\n    .catch(function (error: unknown) {\n      return Promise.reject(error);\n    });\n}\n\nexport async function GetServicePRInformation(\n  commit_sha: string\n): Promise<ServicePRInformation> {\n  return OctokitConfig.request(\n    \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n    {\n      owner: OWNER_REPOSITORY,\n      repo: process.env.REACT_APP_GITHUB_REPOSITORY,\n      commit_sha: commit_sha,\n    }\n  )\n    .then(function (body: { data: any[] }) {\n      return Promise.resolve(body.data.at(0));\n    })\n    .catch(function (error: unknown) {\n      return Promise.reject(error);\n    });\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT\nimport {\n  CircularProgress,\n  Container,\n  Link,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography,\n} from \"@mui/material\";\nimport moment from \"moment\";\nimport * as React from \"react\";\nimport { TRANSACTION_PER_MINUTE } from \"../../common/Constant\";\nimport { usePageEffect } from \"../../core/page\";\nimport { PerformanceTable } from \"../../core/table\";\nimport { UseCaseData } from \"./data\";\nimport {\n  GetLatestPerformanceReports,\n  GetServiceLatestVersion,\n  GetServicePRInformation,\n} from \"./service\";\n\nexport default function PerformanceReport(): JSX.Element {\n  usePageEffect({ title: \"Amazon CloudWatch Agent\" });\n\n  const [\n    {\n      version,\n      commit_date,\n      commit_title,\n      commit_url,\n      use_cases,\n      ami_id,\n      collection_period,\n    },\n  ] = useStatePerformanceReport();\n  const [{ data_type }, setDataTypeState] = useStateDataType();\n\n  return !version || !commit_title ? (\n    <Container\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <CircularProgress color=\"inherit\" />\n    </Container>\n  ) : (\n    <Container sx={{ py: \"5vh\", border: \"1px solid\" }} maxWidth=\"lg\">\n      <Container sx={{ mb: 4 }}>\n        <Typography sx={{ mb: 2, fontWeight: \"bold\" }} variant=\"h2\">\n          Performance Report\n          <hr />\n        </Typography>\n      </Container>\n      <Container sx={{ mb: 4 }}>\n        <TableContainer\n          sx={{\n            mb: 4,\n            display: \"flex\",\n            justifyContent: \"center\",\n            boxShadow: \"unset\",\n          }}\n          component={Paper}\n        >\n          <Table\n            sx={{ borderStyle: \"solid\", width: \"fit-content\" }}\n            size=\"small\"\n            aria-label=\"a dense table\"\n          >\n            <TableBody>\n              {[\n                \"Version\",\n                \"Architectural\",\n                \"Collection Period\",\n                \"Testing AMI\",\n                \"Commit Name\",\n                \"Commit Date\",\n                \"Data type\",\n              ]?.map((name) => (\n                <TableRow key={name}>\n                  <TableCell\n                    sx={{ border: \"1px solid #000\", fontWeight: \"bold\" }}\n                  >\n                    {name}\n                  </TableCell>\n                  <TableCell\n                    sx={{ border: \"1px solid #000\", textAlign: \"center\" }}\n                  >\n                    {name === \"Version\" ? (\n                      <Link\n                        href={`https://github.com/aws/amazon-cloudwatch-agent/releases/tag/${version}`}\n                      >\n                        {version}\n                      </Link>\n                    ) : name === \"Architectural\" ? (\n                      <Typography variant=\"h4\">EC2</Typography>\n                    ) : name === \"Collection Period\" ? (\n                      <Typography variant=\"h4\">{collection_period}s</Typography>\n                    ) : name === \"Testing AMI\" ? (\n                      <Typography variant=\"h4\">{ami_id}</Typography>\n                    ) : name === \"Commit Name\" ? (\n                      <Link href={commit_url} variant=\"h4\">\n                        {commit_title}\n                      </Link>\n                    ) : name === \"Commit Date\" ? (\n                      <Typography variant=\"h4\">{commit_date}</Typography>\n                    ) : (\n                      <Select\n                        sx={{ height: \"41px\" }}\n                        value={data_type}\n                        onChange={(e: { target: { value: string } }) =>\n                          setDataTypeState({ data_type: e.target.value })\n                        }\n                      >\n                        <MenuItem value={\"Metrics\"}>Metric</MenuItem>\n                        <MenuItem value={\"Traces\"}>Trace</MenuItem>\n                        <MenuItem value={\"Logs\"}>Logs</MenuItem>\n                      </Select>\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <hr />\n      </Container>\n      {TRANSACTION_PER_MINUTE.map((tpm) => (\n        <Container key={tpm}>\n          <Typography sx={{ mb: 2, fontWeight: \"bold\" }} variant=\"h3\">\n            {data_type} (TPM: {tpm}){\" \"}\n          </Typography>\n          <PerformanceTable\n            data_rate={String(tpm)}\n            use_cases={use_cases.filter(\n              (use_case: UseCaseData) =>\n                use_case?.data_type === data_type.toLowerCase()\n            )}\n          />\n        </Container>\n      ))}\n    </Container>\n  );\n}\n\nfunction useStatePerformanceReport() {\n  const [state, setState] = React.useState({\n    version: undefined as string | undefined,\n    commit_url: undefined as string | undefined,\n    commit_date: undefined as string | undefined,\n    commit_title: undefined as string | undefined,\n    use_cases: [] as UseCaseData[],\n    ami_id: undefined as string | undefined,\n    collection_period: undefined as string | undefined,\n    error: undefined as string | undefined,\n  });\n\n  React.useEffect(() => {\n    (async () => {\n      const [service_info, performance_reports] = await Promise.all([\n        GetServiceLatestVersion(),\n        GetLatestPerformanceReports(),\n      ]);\n      if (\n        service_info == null ||\n        performance_reports == null ||\n        performance_reports.length === 0\n      ) {\n        return;\n      }\n\n      const use_cases: UseCaseData[] = [];\n      // We only get the latest commit ID; therefore, only use case are different; however, general metadata\n      // information (e.g Commit_Hash, Commit_Date of the PR) would be the same for all datas.\n      const commit_hash = performance_reports.at(0)?.CommitHash.S || \"\";\n      const commit_date = performance_reports.at(0)?.CommitDate.N;\n      const collection_period = performance_reports.at(0)?.CollectionPeriod.S;\n      const ami_id = performance_reports.at(0)?.InstanceAMI.S;\n      for (const pReport of performance_reports) {\n        // Instead of using Max, Min, Std, P99, we would use Avg for every collected metrics\n        use_cases.push({\n          name: pReport?.UseCase.S,\n          data_type: pReport?.DataType.S,\n          instance_type: pReport?.InstanceType.S,\n          data: TRANSACTION_PER_MINUTE.reduce(\n            (accu, tpm) => ({\n              ...accu,\n              [tpm]: {\n                procstat_cpu_usage:\n                  pReport?.Results.M[tpm]?.M?.procstat_cpu_usage?.M?.Average?.N,\n                procstat_memory_rss:\n                  pReport?.Results.M[tpm]?.M?.procstat_memory_rss?.M?.Average\n                    ?.N,\n                procstat_memory_swap:\n                  pReport?.Results.M[tpm]?.M?.procstat_memory_swap?.M?.Average\n                    ?.N,\n                procstat_memory_vms:\n                  pReport?.Results.M[tpm]?.M?.procstat_memory_vms?.M?.Average\n                    ?.N,\n                procstat_memory_data:\n                  pReport?.Results.M[tpm]?.M?.procstat_memory_data?.M?.Average\n                    ?.N,\n                procstat_write_bytes:\n                  pReport?.Results.M[tpm]?.M?.procstat_write_bytes?.M?.Average\n                    ?.N,\n                procstat_num_fds:\n                  pReport?.Results.M[tpm]?.M?.procstat_num_fds?.M?.Average?.N,\n                net_bytes_sent:\n                  pReport?.Results.M[tpm]?.M?.net_bytes_sent?.M?.Average?.N,\n                net_packets_sent:\n                  pReport?.Results.M[tpm]?.M?.net_packets_sent?.M?.Average?.N,\n                mem_total: pReport?.Results.M[tpm]?.M?.mem_total?.M?.Average?.N,\n              },\n            }),\n            {}\n          ),\n        });\n      }\n\n      const commit_info = await GetServicePRInformation(commit_hash);\n\n      setState((prev: any) => ({\n        ...prev,\n        version: service_info.tag_name,\n        ami_id: ami_id,\n        collection_period: collection_period,\n        use_cases: use_cases,\n        commit_title: `${commit_info.title} (#${commit_info.number})`,\n        commit_url: commit_info.html_url,\n        commit_date: moment\n          .unix(Number(commit_date))\n          .format(\"dddd, MMMM Do, YYYY h:mm:ss A\"),\n      }));\n    })();\n  }, [setState]);\n\n  return [state, setState] as const;\n}\n\nfunction useStateDataType() {\n  const [state, setState] = React.useState({\n    data_type: \"Metrics\" as \"Metrics\" | \"Traces\" | \"Logs\" | string,\n  });\n\n  return [state, setState] as const;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT\n\nimport * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function usePageEffect(options?: Options, deps?: React.DependencyList) {\n  const location = useLocation();\n  // Once the page component was rendered, update the HTML document's title\n  React.useEffect(() => {\n    const previousTitle = document.title;\n\n    document.title =\n      location.pathname === \"/\" && options?.title ? `${options.title} ` : \"AWS\";\n\n    return function () {\n      document.title = previousTitle;\n    };\n  }, deps ?? []); /* eslint-disable-line react-hooks/exhaustive-deps */\n}\n\ntype Options = {\n  title?: string;\n  /** @default true */\n  trackPageView?: boolean;\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["AxionConfig","axios","baseURL","process","REACT_APP_DYNAMODB_URL","timeout","headers","REACT_APP_DYNAMODB_TOKEN","responseType","maxRedirects","OctokitConfig","Octokit","auth","REACT_APP_GITHUB_SECRET_TOKEN","USE_CASE","REPORTED_METRICS","TRANSACTION_PER_MINUTE","OWNER_REPOSITORY","SERVICE_NAME","CONVERT_REPORTED_METRICS_NAME","procstat_cpu_usage","procstat_memory_rss","procstat_memory_swap","procstat_memory_vms","procstat_memory_data","procstat_num_fds","procstat_write_bytes","net_bytes_sent","net_packets_sent","StyledTableCell","styled","TableCell","_ref","_ref2","theme","_defineProperty","concat","tableCellClasses","backgroundColor","palette","common","black","color","white","border","textAlign","fontSize","StyledTableRow","TableRow","_ref3","action","hover","PerformanceTable","props","use_cases","data_rate","_jsx","TableContainer","sx","mb","component","Paper","children","_jsxs","Table","borderStyle","size","TableHead","width","align","fontWeight","whiteSpace","TableBody","map","use_case","_use_case$data","_use_case$data$data_r","_use_case$data2","_use_case$data2$data_","_use_case$data3","_use_case$data3$data_","_use_case$data4","_use_case$data4$data_","_use_case$data5","_use_case$data5$data_","_use_case$data6","_use_case$data6$data_","_use_case$data7","_use_case$data7$data_","_use_case$data8","_use_case$data8$data_","_use_case$data9","_use_case$data9$data_","_use_case$data10","_use_case$data10$data","_use_case$data11","_use_case$data11$data","_use_case$data12","_use_case$data12$data","_use_case$data13","_use_case$data13$data","name","instance_type","Number","data","toFixed","mem_total","GetLatestPerformanceReports","_GetLatestPerformanceReports","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","GetPerformanceReports","TableName","REACT_APP_DYNAMODB_NAME","Limit","IndexName","KeyConditions","Service","ComparisonOperator","AttributeValueList","S","CommitDate","N","moment","unix","toString","ScanIndexForward","stop","_x","_GetPerformanceReports","_callee2","params","_context2","Action","Params","then","body","_body$data","Items","catch","error","Promise","reject","GetServiceLatestVersion","_GetServiceLatestVersion","_callee3","_context3","owner","repo","REACT_APP_GITHUB_REPOSITORY","GetServicePRInformation","_x2","_GetServicePRInformation","_callee4","commit_sha","_context4","resolve","at","PerformanceReport","usePageEffect","title","_useStatePerformanceR","_React$useState","React","version","undefined","commit_url","commit_date","commit_title","ami_id","collection_period","_React$useState2","_slicedToArray","state","setState","_performance_reports$","_performance_reports$2","_performance_reports$3","_performance_reports$4","_yield$Promise$all","_yield$Promise$all2","service_info","performance_reports","commit_hash","_iterator","_step","_loop","commit_info","all","sent","length","CommitHash","CollectionPeriod","InstanceAMI","_createForOfIteratorHelper","pReport","value","push","UseCase","data_type","DataType","InstanceType","accu","tpm","_pReport$Results$M$tp","_pReport$Results$M$tp2","_pReport$Results$M$tp3","_pReport$Results$M$tp4","_pReport$Results$M$tp5","_pReport$Results$M$tp6","_pReport$Results$M$tp7","_pReport$Results$M$tp8","_pReport$Results$M$tp9","_pReport$Results$M$tp10","_pReport$Results$M$tp11","_pReport$Results$M$tp12","_pReport$Results$M$tp13","_pReport$Results$M$tp14","_pReport$Results$M$tp15","_pReport$Results$M$tp16","_pReport$Results$M$tp17","_pReport$Results$M$tp18","_pReport$Results$M$tp19","_pReport$Results$M$tp20","_pReport$Results$M$tp21","_pReport$Results$M$tp22","_pReport$Results$M$tp23","_pReport$Results$M$tp24","_pReport$Results$M$tp25","_pReport$Results$M$tp26","_pReport$Results$M$tp27","_pReport$Results$M$tp28","_pReport$Results$M$tp29","_pReport$Results$M$tp30","_pReport$Results$M$tp31","_pReport$Results$M$tp32","_pReport$Results$M$tp33","_pReport$Results$M$tp34","_pReport$Results$M$tp35","_pReport$Results$M$tp36","_pReport$Results$M$tp37","_pReport$Results$M$tp38","_pReport$Results$M$tp39","_pReport$Results$M$tp40","_pReport$Results$M$tp41","_pReport$Results$M$tp42","_pReport$Results$M$tp43","_pReport$Results$M$tp44","_pReport$Results$M$tp45","_pReport$Results$M$tp46","_pReport$Results$M$tp47","_pReport$Results$M$tp48","_pReport$Results$M$tp49","_pReport$Results$M$tp50","_objectSpread","Results","M","Average","s","n","done","delegateYield","t1","e","f","finish","tag_name","number","html_url","format","useStatePerformanceReport","_useStatePerformanceR3","_useStateDataType","_React$useState3","_React$useState4","useStateDataType","_useStateDataType2","setDataTypeState","Container","py","maxWidth","Typography","variant","display","justifyContent","boxShadow","Link","href","Select","height","onChange","target","MenuItem","String","filter","toLowerCase","alignItems","CircularProgress","options","deps","location","useLocation","previousTitle","document","pathname","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","overridesResolver","styles","root","tablelvl2","defaultComponent","inProps","ref","useThemeProps","className","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","as","clsx","role"],"sourceRoot":""}